{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Order Controller",
      "description": "API для управления заказами"
    }
  ],
  "paths": {
    "/orders": {
      "post": {
        "tags": [
          "Order Controller"
        ],
        "summary": "Создание заказа",
        "description": "Создает новый заказ и возвращает созданный заказ.",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Неверные данные для создания заказа",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "201": {
            "description": "Заказ успешно создан",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/orders/details": {
      "post": {
        "tags": [
          "order-details-controller"
        ],
        "summary": "Добавить детали к заказу",
        "description": "Добавляет детали к указанному заказу.",
        "operationId": "addOrderDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Детали заказа успешно добавлены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Order Controller"
        ],
        "summary": "Получение заказа по идентификатору",
        "description": "Возвращает заказ по его ID.",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор заказа",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Заказ с указанным ID не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "200": {
            "description": "Заказ найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/orders/filter/exclude-product-and-in-time-period": {
      "get": {
        "tags": [
          "Order Controller"
        ],
        "summary": "Получение списка заказов, не содержащих заданный товар и поступивших в заданный временной период.",
        "description": "Возвращает заказы, которые не содержат заданный товар и поступили в указанный временной период.",
        "operationId": "getOrdersWithoutProductAndInTimePeriod",
        "parameters": [
          {
            "name": "productName",
            "in": "query",
            "description": "Название товара",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Начальная дата периода",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Конечная дата периода",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список заказов найден",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверные параметры фильтрации",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/filter/by-date-and-min-amount": {
      "get": {
        "tags": [
          "Order Controller"
        ],
        "summary": "Получение списка заказов за заданную дату и больше заданной общей суммы заказа",
        "description": "Возвращает заказы, сделанные в указанную дату и с общей суммой больше заданного значения.",
        "operationId": "getOrdersByDateAndAmount",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Дата заказа",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "minAmount",
            "in": "query",
            "description": "Минимальная сумма заказа",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список заказов найден",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверные параметры фильтрации",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "required": [
          "recipient"
        ],
        "type": "object",
        "properties": {
          "recipient": {
            "type": "string"
          },
          "deliveryAddress": {
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "deliveryType": {
            "type": "string"
          }
        }
      },
      "OrderDetails": {
        "required": [
          "orderId",
          "productCode",
          "productName",
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}